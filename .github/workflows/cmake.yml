name: CMake test matrix
on:
  push:
    branches: [ master, yus/gmsh_ci_test ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compiler: [g++]
        mpi: [on, off]
        kokkos: [on, off]
        kokkos_version: [develop]
        mempool: [off]
        cxx_standard: [17]     
                 
    env:
      CXX: ${{matrix.compiler}}
      MPICH_CXX: ${{matrix.compiler}}

    steps:
    - uses: actions/checkout@v4
      with:
        path: omega_h

    - uses: actions/checkout@v4
      if: ${{ matrix.kokkos == 'on' }}
      with:
        repository: kokkos/kokkos
        path: kokkos
        ref: ${{matrix.kokkos_version}}

    - name: install mpich
      if: ${{ matrix.mpi == 'on' }}
      run: |
           sudo apt update
           sudo apt install mpich
    
    - name: install gmsh
      working-directory: ${{runner.temp }}
      run: |
           git clone --branch gmsh_4_14_1 https://gitlab.onelab.info/gmsh/gmsh.git
           cd gmsh
           mkdir build
           cmake . \
            -Bbuild \
            -DENABLE_BUILD_DYNAMIC=1 \
            -DCMAKE_INSTALL_PREFIX=install \
            -DENABLE_BUILD_LIB=ON \
            -DENABLE_BUILD_SHARED=ON
           cmake --build build -j 4 --target install

    - name: set mpi compiler wrapper
      if: ${{ matrix.mpi == 'on' }}
      run: |
           echo "CXX=mpicxx" >> $GITHUB_ENV

    - name: print info      
      run: |
           version=
           echo "Compiler: ${{matrix.compiler}}"
           ${{matrix.compiler}} --version
           echo "MPI: ${{matrix.mpi}}"
           echo "Kokkos: ${{matrix.kokkos}}"
           echo "Memory Pool: ${{matrix.mempool}}"

    - name: Configure Kokkos
      if: ${{ matrix.kokkos == 'on' }}
      shell: bash
      working-directory: ${{github.workspace}}/kokkos
      run: cmake .
           -Bbuild
           -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
           -DCMAKE_INSTALL_PREFIX=build/install

    - name: Build Kokkos
      if: ${{ matrix.kokkos == 'on' }}
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/kokkos/build --target install

    - name: Checkout ADIOS2
      uses: actions/checkout@v4
      if: ${{ matrix.mpi == 'on' }}
      with:
        repository: ornladios/ADIOS2
        path: ADIOS2

    - name: Configure ADIOS2
      if: ${{ matrix.mpi == 'on' }}
      shell: bash
      working-directory: ${{github.workspace}}/ADIOS2
      run: cmake .
           -Bbuild
           -DCMAKE_INSTALL_PREFIX=build/install
           -DADIOS2_USE_CUDA=OFF
           -DADIOS2_USE_ZFP=OFF
    
    - name: Build ADIOS2
      if: ${{ matrix.mpi == 'on' }}
      shell: bash
      run: cmake --build $GITHUB_WORKSPACE/ADIOS2/build --target install

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/omega_h
      run: |
          ls -la ${{runner.temp }}/gmsh/install
          ls -la ${{runner.temp }}/gmsh/install/lib
          ls -la ${{runner.temp }}/gmsh/install/include
          export CMAKE_PREFIX_PATH="${{runner.temp }}/gmsh/install:$CMAKE_PREFIX_PATH"
          export LD_LIBRARY_PATH="${{runner.temp }}/gmsh/install/lib:$LD_LIBRARY_PATH"
          export CMAKE_PREFIX_PATH="$GITHUB_WORKSPACE/ADIOS2/build/install:$CMAKE_PREFIX_PATH"
          cmake . -Bbuild \
          -DCMAKE_CXX_COMPILER=$CXX \
          -DCMAKE_CXX_STANDARD=${{ matrix.cxx_standard }} \
          -DCMAKE_VERBOSE_MAKEFILE=on \
          -DOmega_h_USE_MPI=${{ matrix.mpi }} \
          -DOmega_h_USE_Kokkos=${{ matrix.kokkos }} \
          -DKokkos_PREFIX=$GITHUB_WORKSPACE/kokkos/build/install \
          -DOmega_h_USE_Gmsh=ON \
          -DGmsh_INCLUDE_DIRS=${{runner.temp }}/gmsh/install/include \
          -DGmsh_LIBRARIES=${{runner.temp }}/gmsh/install/lib/libgmsh.so.4.14.1 \
          -DOmega_h_USE_ADIOS2=ON \
          -DBUILD_TESTING=ON \
          -DBUILD_SHARED_LIBS=OFF \
          -DENABLE_CTEST_MEMPOOL=${{ matrix.mempool }}

    - name: Build
      working-directory: ${{github.workspace}}/omega_h/build
      shell: bash
      run: cmake --build . -j2

    - name: Test
      working-directory: ${{github.workspace}}/omega_h/build
      shell: bash
      run: ctest

    - name: Print
      if: always()
      run: cat ${{github.workspace}}/omega_h/build/Testing/Temporary/LastTest.log
